(()=>{let e=null;async function n(n,t,s=""){try{return e||await async function(n,t){e=await ai.languageModel.create({...n,systemPrompt:`You are helping a user understand and answer questions about this article: "${t}".`})}(t,s),console.log("Running prompt",n),e.prompt(n)}catch(n){throw console.error("Prompt failed:",n),async function(){e&&e.destroy(),e=null}(),n}}chrome.runtime.onMessage.addListener(((e,t,s)=>{const o={temperature:.7,topK:5};if("summarize_page"===e.action)console.log("Message received"),n('Generate 5 questions and answers based on the key points of the article. \n      Structure the response like this "question: {questions} answer: {answer}" no other text',o,e.content).then((e=>{console.log("Summary sent",e);const n=e.split("\n\n").map((e=>{const n=e.split("\n").map((e=>e.trim())),t=n.find((e=>e.startsWith("question:"))),s=n.find((e=>e.startsWith("answer:")));return t&&s?{question:t.replace(/^question:\s*/i,"").trim(),answer:s.replace(/^answer:\s*/i,"").trim()}:(console.warn("Skipped block due to missing question or answer:",e),null)})).filter((e=>null!==e));chrome.storage.local.set({questionAnswerPairs:n},(()=>{console.log("Questions and answers stored:",n)}))})).catch((e=>console.error("Error summarizing content:",e)));else if("validate_answer"===e.action){const{question:s,userAnswer:o,index:r}=e;(async function(e,t){return n(`Under the context of the above article, score the answer to this question: "${e}" \n  with the user answer: "${t}". \n  Respond with a score between 0 and 20 based on the correctness of the answer. \n  Return in this format: "Score is: "`,{temperature:.7,topK:5})})(s,o).then((e=>{chrome.tabs.sendMessage(t.tab.id,{action:"display_feedback",feedback:e,index:r}),console.log("Feedback sent",e)})).catch((e=>console.error("Error validating answer:",e)))}}))})();